version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app:/app/src/app
      - DEBUG=true
      # Database connection string
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/app_db
      - ALEMBIC_CONFIG=/app/alembic.ini
    develop:
      watch:
        - action: sync
          path: .
          target: /app
          ignore:
            - .venv/
            - __pycache__/
            - .git/
            - .pytest_cache/
            - .mypy_cache/
        - action: rebuild
          path: ./uv.lock
    volumes:
      - ./:/app
      - /app/.venv
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=app_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data: