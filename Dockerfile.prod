# Production multi-stage Dockerfile for FastAPI with uv
# Stage 1: Build the application
FROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim AS builder

# Set up working directory
WORKDIR /app

# Enable bytecode compilation for better performance
ENV UV_COMPILE_BYTECODE=1
ENV UV_LINK_MODE=copy

# Install dependencies first (for better layer caching)
COPY pyproject.toml uv.lock* ./
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --no-install-project --no-dev

# Then add the application code and install the project
COPY . /app
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --no-dev

# Stage 2: Create the production image
FROM python:3.12-slim-bookworm

# Create a non-root user for running the application
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Set working directory
WORKDIR /app

# Copy only the necessary files from the builder stage
COPY --from=builder --chown=appuser:appuser /app /app

# Set the PATH to include the virtual environment binaries
ENV PATH="/app/.venv/bin:$PATH"

# Switch to non-root user
USER appuser

# Expose the application port
EXPOSE 8000

# Run the application with optimal production settings
CMD ["/app/.venv/bin/uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4", "--no-access-log"]